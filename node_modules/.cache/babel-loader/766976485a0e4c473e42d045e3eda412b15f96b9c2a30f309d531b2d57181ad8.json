{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState, mapActions } from 'vuex';\nexport default {\n  data() {\n    return {\n      form: {\n        title: '',\n        content: '',\n        author: '',\n        datafile: null\n      }\n    };\n  },\n  computed: {\n    ...mapState(['dataroom'])\n  },\n  methods: {\n    ...mapActions(['fetchDataroom', 'updateDataroom']),\n    handleFileUpload(event) {\n      this.form.datafile = event.target.files[0];\n    },\n    submitForm() {\n      const formData = new FormData();\n      formData.append('title', this.form.title);\n      formData.append('content', this.form.content);\n      formData.append('author', this.form.author);\n      if (this.form.datafile) {\n        formData.append('datafile', this.form.datafile);\n      }\n      this.updateDataroom({\n        id: this.$route.params.id,\n        formData\n      }).then(() => {\n        this.$router.push({\n          name: 'DataDetail',\n          params: {\n            id: this.dataroom.dno\n          }\n        });\n      });\n    }\n  },\n  created() {\n    this.fetchDataroom(this.$route.params.id).then(() => {\n      this.form = {\n        title: this.dataroom.title,\n        content: this.dataroom.content,\n        author: this.dataroom.author\n      };\n    });\n  }\n};","map":{"version":3,"names":["mapState","mapActions","data","form","title","content","author","datafile","computed","methods","handleFileUpload","event","target","files","submitForm","formData","FormData","append","updateDataroom","id","$route","params","then","$router","push","name","dataroom","dno","created","fetchDataroom"],"sources":["D:\\gitRepository\\sunglee0517\\vuejs_project01\\01_company_mvvm\\src\\views\\DataUpdate.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>자료 수정</h1>\r\n      <form @submit.prevent=\"submitForm\">\r\n        <div>\r\n          <label for=\"title\">제목:</label>\r\n          <input type=\"text\" v-model=\"form.title\" id=\"title\" required />\r\n        </div>\r\n        <div>\r\n          <label for=\"content\">내용:</label>\r\n          <textarea v-model=\"form.content\" id=\"content\" required></textarea>\r\n        </div>\r\n        <div>\r\n          <label for=\"author\">작성자:</label>\r\n          <input type=\"text\" v-model=\"form.author\" id=\"author\" required />\r\n        </div>\r\n        <div>\r\n          <label for=\"datafile\">파일 업로드:</label>\r\n          <input type=\"file\" @change=\"handleFileUpload\" id=\"datafile\" />\r\n        </div>\r\n        <button type=\"submit\">수정</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { mapState, mapActions } from 'vuex';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {\r\n          title: '',\r\n          content: '',\r\n          author: '',\r\n          datafile: null,\r\n        },\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapState(['dataroom']),\r\n    },\r\n    methods: {\r\n      ...mapActions(['fetchDataroom', 'updateDataroom']),\r\n      handleFileUpload(event) {\r\n        this.form.datafile = event.target.files[0];\r\n      },\r\n      submitForm() {\r\n        const formData = new FormData();\r\n        formData.append('title', this.form.title);\r\n        formData.append('content', this.form.content);\r\n        formData.append('author', this.form.author);\r\n        if (this.form.datafile) {\r\n          formData.append('datafile', this.form.datafile);\r\n        }\r\n  \r\n        this.updateDataroom({ id: this.$route.params.id, formData }).then(() => {\r\n          this.$router.push({ name: 'DataDetail', params: { id: this.dataroom.dno } });\r\n        });\r\n      },\r\n    },\r\n    created() {\r\n      this.fetchDataroom(this.$route.params.id).then(() => {\r\n        this.form = {\r\n          title: this.dataroom.title,\r\n          content: this.dataroom.content,\r\n          author: this.dataroom.author,\r\n        };\r\n      });\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";AA0BE,SAASA,QAAQ,EAAEC,UAAS,QAAS,MAAM;AAE3C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,EAAE;QACXC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGR,QAAQ,CAAC,CAAC,UAAU,CAAC;EAC1B,CAAC;EACDS,OAAO,EAAE;IACP,GAAGR,UAAU,CAAC,CAAC,eAAe,EAAE,gBAAgB,CAAC,CAAC;IAClDS,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAACR,IAAI,CAACI,QAAO,GAAII,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC5C,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACd,IAAI,CAACC,KAAK,CAAC;MACzCW,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE,IAAI,CAACd,IAAI,CAACE,OAAO,CAAC;MAC7CU,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAE,IAAI,CAACd,IAAI,CAACG,MAAM,CAAC;MAC3C,IAAI,IAAI,CAACH,IAAI,CAACI,QAAQ,EAAE;QACtBQ,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAACd,IAAI,CAACI,QAAQ,CAAC;MACjD;MAEA,IAAI,CAACW,cAAc,CAAC;QAAEC,EAAE,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,EAAE;QAAEJ;MAAS,CAAC,CAAC,CAACO,IAAI,CAAC,MAAM;QACtE,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE,YAAY;UAAEJ,MAAM,EAAE;YAAEF,EAAE,EAAE,IAAI,CAACO,QAAQ,CAACC;UAAI;QAAE,CAAC,CAAC;MAC9E,CAAC,CAAC;IACJ;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,IAAI,CAACT,MAAM,CAACC,MAAM,CAACF,EAAE,CAAC,CAACG,IAAI,CAAC,MAAM;MACnD,IAAI,CAACnB,IAAG,GAAI;QACVC,KAAK,EAAE,IAAI,CAACsB,QAAQ,CAACtB,KAAK;QAC1BC,OAAO,EAAE,IAAI,CAACqB,QAAQ,CAACrB,OAAO;QAC9BC,MAAM,EAAE,IAAI,CAACoB,QAAQ,CAACpB;MACxB,CAAC;IACH,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}