{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"제품 등록\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"cate\"\n}, \"카테고리:\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"pname\"\n}, \"제품명:\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"pcontent\"\n}, \"내용:\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"img1\"\n}, \"이미지 1:\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"img2\"\n}, \"이미지 2:\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"img3\"\n}, \"이미지 3:\", -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"등록\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.cate = $event),\n    id: \"cate\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.cate]])]), _createElementVNode(\"div\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.pname = $event),\n    id: \"pname\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.pname]])]), _createElementVNode(\"div\", null, [_hoisted_4, _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.pcontent = $event),\n    id: \"pcontent\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.pcontent]])]), _createElementVNode(\"div\", null, [_hoisted_5, _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[3] || (_cache[3] = $event => $options.handleFileUpload(1, $event)),\n    id: \"img1\"\n  }, null, 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", null, [_hoisted_6, _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[4] || (_cache[4] = $event => $options.handleFileUpload(2, $event)),\n    id: \"img2\"\n  }, null, 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", null, [_hoisted_7, _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[5] || (_cache[5] = $event => $options.handleFileUpload(3, $event)),\n    id: \"img3\"\n  }, null, 32 /* NEED_HYDRATION */)]), _hoisted_8], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementVNode","for","type","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","submitForm","_hoisted_2","$event","$data","form","cate","id","required","_hoisted_3","pname","_hoisted_4","pcontent","_hoisted_5","onChange","handleFileUpload","_hoisted_6","_hoisted_7","_hoisted_8"],"sources":["D:\\gitRepository\\sunglee0517\\vuejs_project01\\01_company_mvvm\\src\\views\\ProductInsert.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>제품 등록</h1>\r\n      <form @submit.prevent=\"submitForm\">\r\n        <div>\r\n          <label for=\"cate\">카테고리:</label>\r\n          <input type=\"text\" v-model=\"form.cate\" id=\"cate\" required />\r\n        </div>\r\n        <div>\r\n          <label for=\"pname\">제품명:</label>\r\n          <input type=\"text\" v-model=\"form.pname\" id=\"pname\" required />\r\n        </div>\r\n        <div>\r\n          <label for=\"pcontent\">내용:</label>\r\n          <textarea v-model=\"form.pcontent\" id=\"pcontent\" required></textarea>\r\n        </div>\r\n        <div>\r\n          <label for=\"img1\">이미지 1:</label>\r\n          <input type=\"file\" @change=\"handleFileUpload(1, $event)\" id=\"img1\" />\r\n        </div>\r\n        <div>\r\n          <label for=\"img2\">이미지 2:</label>\r\n          <input type=\"file\" @change=\"handleFileUpload(2, $event)\" id=\"img2\" />\r\n        </div>\r\n        <div>\r\n          <label for=\"img3\">이미지 3:</label>\r\n          <input type=\"file\" @change=\"handleFileUpload(3, $event)\" id=\"img3\" />\r\n        </div>\r\n        <button type=\"submit\">등록</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { mapActions } from 'vuex';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {\r\n          cate: '',\r\n          pname: '',\r\n          pcontent: '',\r\n          img1: null,\r\n          img2: null,\r\n          img3: null,\r\n        },\r\n      };\r\n    },\r\n    methods: {\r\n      ...mapActions(['insertProduct']),\r\n      handleFileUpload(index, event) {\r\n        this.form[`img${index}`] = event.target.files[0];\r\n      },\r\n      submitForm() {\r\n        const formData = new FormData();\r\n        formData.append('cate', this.form.cate);\r\n        formData.append('pname', this.form.pname);\r\n        formData.append('pcontent', this.form.pcontent);\r\n        if (this.form.img1) formData.append('img1', this.form.img1);\r\n        if (this.form.img2) formData.append('img2', this.form.img2);\r\n        if (this.form.img3) formData.append('img3', this.form.img3);\r\n  \r\n        this.insertProduct(formData).then(() => {\r\n          this.$router.push({ name: 'ProductList' });\r\n        });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";gCAEMA,mBAAA,CAAc,YAAV,OAAK;gCAGLA,mBAAA,CAA+B;EAAxBC,GAAG,EAAC;AAAM,GAAC,OAAK;gCAIvBD,mBAAA,CAA+B;EAAxBC,GAAG,EAAC;AAAO,GAAC,MAAI;gCAIvBD,mBAAA,CAAiC;EAA1BC,GAAG,EAAC;AAAU,GAAC,KAAG;gCAIzBD,mBAAA,CAAgC;EAAzBC,GAAG,EAAC;AAAM,GAAC,QAAM;gCAIxBD,mBAAA,CAAgC;EAAzBC,GAAG,EAAC;AAAM,GAAC,QAAM;gCAIxBD,mBAAA,CAAgC;EAAzBC,GAAG,EAAC;AAAM,GAAC,QAAM;gCAG1BD,mBAAA,CAAiC;EAAzBE,IAAI,EAAC;AAAQ,GAAC,IAAE;;uBA3B5BC,mBAAA,CA6BM,cA5BJC,UAAc,EACdJ,mBAAA,CA0BO;IA1BAK,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHnBC,cAAA,KAAAC,IAAA,KAG6BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BR,mBAAA,CAGM,cAFJW,UAA+B,E,gBAC/BX,mBAAA,CAA4D;IAArDE,IAAI,EAAC,MAAM;IAN5B,uBAAAI,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAMsCC,KAAA,CAAAC,IAAI,CAACC,IAAI,GAAAH,MAAA;IAAEI,EAAE,EAAC,MAAM;IAACC,QAAQ,EAAR;iDAArBJ,KAAA,CAAAC,IAAI,CAACC,IAAI,E,KAEvCf,mBAAA,CAGM,cAFJkB,UAA+B,E,gBAC/BlB,mBAAA,CAA8D;IAAvDE,IAAI,EAAC,MAAM;IAV5B,uBAAAI,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAUsCC,KAAA,CAAAC,IAAI,CAACK,KAAK,GAAAP,MAAA;IAAEI,EAAE,EAAC,OAAO;IAACC,QAAQ,EAAR;iDAAvBJ,KAAA,CAAAC,IAAI,CAACK,KAAK,E,KAExCnB,mBAAA,CAGM,cAFJoB,UAAiC,E,gBACjCpB,mBAAA,CAAoE;IAd9E,uBAAAM,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAc6BC,KAAA,CAAAC,IAAI,CAACO,QAAQ,GAAAT,MAAA;IAAEI,EAAE,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAA7BJ,KAAA,CAAAC,IAAI,CAACO,QAAQ,E,KAElCrB,mBAAA,CAGM,cAFJsB,UAAgC,EAChCtB,mBAAA,CAAqE;IAA9DE,IAAI,EAAC,MAAM;IAAEqB,QAAM,EAAAjB,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAAEH,QAAA,CAAAe,gBAAgB,IAAIZ,MAAM;IAAGI,EAAE,EAAC;uCAE9DhB,mBAAA,CAGM,cAFJyB,UAAgC,EAChCzB,mBAAA,CAAqE;IAA9DE,IAAI,EAAC,MAAM;IAAEqB,QAAM,EAAAjB,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAAEH,QAAA,CAAAe,gBAAgB,IAAIZ,MAAM;IAAGI,EAAE,EAAC;uCAE9DhB,mBAAA,CAGM,cAFJ0B,UAAgC,EAChC1B,mBAAA,CAAqE;IAA9DE,IAAI,EAAC,MAAM;IAAEqB,QAAM,EAAAjB,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAAEH,QAAA,CAAAe,gBAAgB,IAAIZ,MAAM;IAAGI,EAAE,EAAC;uCAE9DW,UAAiC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}